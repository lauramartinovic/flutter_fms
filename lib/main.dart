// lib/main.dart
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
// Add 'as firebase_auth_lib' to this import to avoid conflicts
import 'package:firebase_auth/firebase_auth.dart' as firebase_auth_lib;

import 'firebase_options.dart'; // The file generated by FlutterFire CLI
import 'screens/auth/auth_screen.dart'; // Your combined auth screen
import 'screens/home/home_screen.dart'; // Your home screen
import 'services/auth_service.dart'; // Your AuthService
import 'providers/auth_provider.dart'; // Your AuthProvider
import 'package:camera/camera.dart'; // Import camera package

List<CameraDescription> cameras = []; // Global variable to hold camera descriptions
Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized(); // Ensure Flutter widgets are initialized
  cameras = await availableCameras(); // Get the list of available cameras

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  ); // Initialize Firebase

  runApp(
    MultiProvider(
      providers: [
        // Provide the AuthService instance
        Provider<AuthService>(create: (_) => AuthService()),
        // Provide the AuthProvider for managing loading states
        ChangeNotifierProvider<AuthProvider>(create: (_) => AuthProvider()),
        // StreamProvider for Firebase Auth state changes
        // Use 'firebase_auth_lib.User?' here to specify the User class from firebase_auth
        StreamProvider<firebase_auth_lib.User?>(
          create: (context) => context.read<AuthService>().authStateChanges,
          initialData: null, // Initial data is null (no user logged in)
        ),
      ],
      child: const MyApp(), // Your main app widget
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // Listen to the User? stream to determine auth state
    // Use 'firebase_auth_lib.User?' here to specify the User class from firebase_auth
    final user = context.watch<firebase_auth_lib.User?>();

    return MaterialApp(
      title: 'FMS App', // Changed title to reflect your app
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true, // Assuming you want Material 3 design
      ),
      // Based on the user's authentication status, show the appropriate screen
      // MODIFIED: Pass the globally available 'cameras' list to HomeScreen
      home: user == null ? const AuthScreen() : HomeScreen(cameras: cameras),
    );
  }
}
